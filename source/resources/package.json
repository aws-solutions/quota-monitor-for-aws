{
  "name": "quota-monitor",
  "version": "6.3.0",
  "description": "cdk resources to provision needed infrastructure",
  "author": {
    "name": "Amazon Web Services",
    "url": "https://aws.amazon.com/solutions"
  },
  "license": "Apache-2.0",
  "scripts": {
    "cleanup": "rm -rf node_modules && rm -f package-lock.json",
    "build": "npx tsc",
    "watch": "npx tsc -w",
    "pretest": "npm ci",
    "test": "npx jest",
    "cdk": "npx cdk",
    "get-cdk-bucket": "aws cloudformation describe-stacks --stack-name CDKToolkit --query 'Stacks[0].Outputs[?OutputKey==`BucketName`].OutputValue' --output text",
    "update-bucket-encryption": "aws s3api put-bucket-encryption --bucket $SOLUTION_BUCKET --server-side-encryption-configuration '{\"Rules\": [{\"ApplyServerSideEncryptionByDefault\": {\"SSEAlgorithm\": \"AES256\"}}]}'",
    "synth": "npm run cdk -- synth -c SOLUTION_NAME=quota-monitor-for-aws -c SOLUTION_VERSION=6.3.0",
    "deploy": "npm run cdk -- deploy -c SOLUTION_NAME=quota-monitor-for-aws -c SOLUTION_VERSION=6.3.0",
    "orgHub:deploy": "export MODIFY_TEMPLATES=true && export SOLUTION_BUCKET=$(npm run -s get-cdk-bucket) && npm run update-bucket-encryption && rm -rf cdk.out && echo 'fixing stackset template paths for cdk assets by forcing it to synth twice' && npm run synth && npm run deploy"
  },
  "devDependencies": {
    "@types/jest": "^29.5.11",
    "@types/node": "^22.15.0",
    "aws-cdk": "^2.168.0",
    "aws-cdk-lib": "^2.168.0",
    "@aws-cdk/aws-servicecatalogappregistry-alpha": "^2.168.0-alpha.0",
    "cdk-nag": "^2.27.228",
    "constructs": "^10.3.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "typescript": "5.3.3"
  }
}
